#!/usr/bin/python
# -*- coding: UTF-8 -*-

from PIL import Image
import matplotlib.pyplot as plt
import numpy as np
import cv2

def read_image_return_nparray(fname):
    image = Image.open(fname)
    image_array = np.array(image)
    return image_array

def resize_image_innparray(data, width, height):
    resized_image = cv2.resize(data, (width, height))
    return resized_image

def image_add_with_certain_weight(foreground, background, alpha, cmap='rainbow', verbose=False, save=None, axis="off"):
    """ About cmap , you can follow the link: https://matplotlib.org/3.1.0/tutorials/colors/colormaps.html"""

    plt.imshow(background)
    plt.imshow(255 * foreground, alpha=alpha, cmap=cmap)
    plt.axis(axis)
    
    if save is not None:
        if verbose:
            print('save image: ' + save)
        plt.savefig(save, bbox_inches='tight', pad_inches=0)

    plt.close()


def images_add_with_certain_weight(foreground1, foreground2, background, alpha, cmap='rainbow', verbose=False, save=None, axis="off"):
    """ About cmap , you can follow the link: https://matplotlib.org/3.1.0/tutorials/colors/colormaps.html"""

    plt.imshow(background)
    plt.imshow(255 * foreground1, alpha=alpha, cmap=cmap)
    plt.imshow(255 * foreground2, alpha=alpha, cmap=cmap)
    plt.axis(axis)

    if save is not None:
        if verbose:
            print('save image: ' + save)
        plt.savefig(save, bbox_inches='tight', pad_inches=0)

    plt.close()
